apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }
}

def platform = "mac"
if (System.properties['os.name'].toLowerCase().contains('windows'))
{
    platform = "win"
}

def coronaNativeDir = System.getProperty("user.home") + "/Library/Application Support/Corona/Native"
if (platform == "win")
{
    coronaNativeDir = System.getenv("CORONA_ROOT")
}

task exportPluginJar (type: Copy, description: 'place the plugin JAR file in the outputs directory and give it a name from the AndroidManifest.xml') {
    def pluginName = new XmlSlurper().parse(file('src/main/AndroidManifest.xml')).@package.text()
    from "$buildDir/intermediates/bundles/default/"
    into "$buildDir/outputs/jar"
    include 'classes.jar'
    rename 'classes.jar', "${pluginName}.jar"

    doFirst {
        println '== exportPluginJar =='
    }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn('exportPluginJar')
}

dependencies {
    compile fileTree(dir: "$coronaNativeDir/Corona/android/lib/Corona/libs", include: '*.jar')
    compile fileTree(dir: 'libs', include: '*.jar')
    // for cognito SDK
    compile 'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.6.8'


//    // From Gene
//    compile('com.amazonaws:aws-android-sdk-mobile-client:2.6.+@aar') { transitive = true }
//    // Cognito UserPools for SignIn
//    compile('com.amazonaws:aws-android-sdk-auth-userpools:2.6.+@aar') { transitive = true }
//
//    // Sign in UI Library
//    compile('com.amazonaws:aws-android-sdk-auth-ui:2.6.+@aar') { transitive = true }
//    compile 'com.android.support.constraint:constraint-layout:1.0.2'
//    compile ('com.amazonaws:aws-android-sdk-auth-facebook:2.6.+@aar') { transitive = true }

}
